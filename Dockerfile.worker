# ---- Builder Stage ----
FROM node:20-alpine AS builder

# Add Alpine repository mirror for better reliability
RUN echo 'https://dl-cdn.alpinelinux.org/alpine/v3.19/main/' > /etc/apk/repositories && \
    echo 'https://dl-cdn.alpinelinux.org/alpine/v3.19/community/' >> /etc/apk/repositories && \
    apk update

WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci

# Copy all application code
COPY . ./

# Compile TypeScript to JavaScript using the worker-specific config
RUN ./node_modules/.bin/tsc -p tsconfig.worker.json

# ---- Final Stage ----
FROM node:20-alpine

# Add Alpine repository mirror for better reliability
RUN echo 'https://dl-cdn.alpinelinux.org/alpine/v3.19/main/' > /etc/apk/repositories && \
    echo 'https://dl-cdn.alpinelinux.org/alpine/v3.19/community/' >> /etc/apk/repositories && \
    apk update

WORKDIR /app

# Set environment variable for production
ENV NODE_ENV=production

# Copy package files and node_modules
COPY package.json ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/prisma ./prisma/

# Copy compiled code from builder stage
COPY --from=builder /app/dist ./dist

# Copy entrypoint script
COPY scripts/worker-entrypoint.sh /worker-entrypoint.sh
RUN chmod +x /worker-entrypoint.sh

# Run the entrypoint script (which handles migrations, prisma generate, and starts the worker)
CMD ["/worker-entrypoint.sh"]