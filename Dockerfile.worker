# ---- Builder Stage ----
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files and prisma schema
COPY package.json package-lock.json ./
COPY prisma ./prisma/
COPY tsconfig.json ./
COPY tsconfig.worker.json ./

# Install ALL dependencies (including devDependencies)
RUN npm install --verbose

# Verify tsc installation
RUN ls -la ./node_modules/.bin/ && \
    if [ ! -f ./node_modules/.bin/tsc ]; then echo "tsc not found after install!"; exit 1; fi

# Copy the rest of the application code
COPY . ./

# Compile TypeScript to JavaScript using the worker-specific config
RUN ./node_modules/.bin/tsc -p tsconfig.worker.json

# ---- Final Stage ----
FROM node:20-alpine

WORKDIR /app

# Set environment variable for production
ENV NODE_ENV=production

# Copy package files and prisma schema needed for production
COPY package.json package-lock.json ./
COPY prisma ./prisma/

# Install ONLY production dependencies
RUN npm install --omit=dev --verbose

# Copy compiled code from builder stage
COPY --from=builder /app/dist ./dist

# Copy entrypoint script
COPY scripts/worker-entrypoint.sh /worker-entrypoint.sh
RUN chmod +x /worker-entrypoint.sh

# Run the entrypoint script (which handles migrations, prisma generate, and starts the worker)
CMD ["/worker-entrypoint.sh"]